[{"name": "WASRUNTIME_API", "body": "class WASRUNTIME_API UWeaponComponent : public UPrimitiveComponent\n{\n\tGENERATED_BODY()\n\t\n#pragma region Properties\nprotected:\n\t\n\tUPROPERTY(EditAnywhere, BlueprintReadWrite)\n\tFWeaponAttributesModificator ManualModificator;\n\n\t//Used to cache components with the specific socket\n\tmutable TMap<FName, TSoftObjectPtr<USceneComponent>> CachedSockets;\n\tmutable TMap<FName, TSoftObjectPtr<USceneComponent>> CachedTags;\n\n\tUPROPERTY(BlueprintAssignable, Category = Trigger)\n\tFTriggered OnTriggered;\n\n\tUPROPERTY(BlueprintAssignable, Category = Trigger)\n\tFTriggered OnTriggerFailed;\n\t\n\tUPROPERTY(BlueprintAssignable, Category = Trigger)\n\tFCooledDown OnCooledDown;\n\n\tUPROPERTY(BlueprintAssignable, Category = Trigger)\n\tFTriggered OnBeginReload;\n\t\n\tUPROPERTY(BlueprintAssignable, Category = Trigger)\n\tFTriggered OnReload;\n\n\tUPROPERTY(BlueprintAssignable, Category = Trigger)\n\tFTriggered OnFinishReload;\n\t\n\tUPROPERTY(BlueprintAssignable, Category = Trigger)\n\tFTriggered OnReloadFailed;\n\n\tUPROPERTY(BlueprintAssignable, Category = Trigger)\n\tFTriggered OnJamm;\n\n\tTDynamicPtr AmmoSource;\n\n\tTDynamicPtr AmmoInMagazine;\n\t\n\tUPROPERTY(VisibleAnywhere, BlueprintReadOnly, Transient)\n\tclass UWeaponAssetDefault* WeaponAsset;\n\t\n\t//FAst access to source weapon asset. EDITOR ONLY\n\tUPROPERTY(EditAnywhere)\n\tTObjectPtr<const class UWeaponAssetDefault> WeaponAssetSource;\n\t\n\tFTimerHandle TriggerCooldown;\n\t\n\tFTimerHandle TriggerTimer;\n\t\n\tint32 BurstIndex;\n\n\tUPROPERTY(EditAnywhere, BlueprintReadOnly)\n\tuint8 bUseInstancedAsset:1 = true;\n\n\tUPROPERTY(EditAnywhere, BlueprintReadWrite)\n\tuint8 bJammed:1;\n\t\n\tuint8 bIsTriggering:1;\n\t\n\tuint8 isGenerating:1;\n\n\tuint8 bCancelReload:1;\n\n\tuint8 bReloading:1;\n\n#pragma endregion\n\t\n#pragma region Methods\npublic:\n\n#pragma region InitializationAndDestruction\n\n\t/*\n\t\tParamsAndReturn some generic description\n\t\t@param Param1 some generic description for the first parameter\n\t\t@param Param2 some generic description for the second parameter\n\t\t@param Return1 some generic description for the first return value\n\t\t@param Return2 some generic description for the second return value\n\t\t@return some generic description for the return value\n\t*/\n\tUFUNCTION(BlueprintCallable, Category = Caca, meta=(DisplayName=\"ParamsAndReturn\"))\n\tint32 ParamsAndReturn(int32 Param1, int32 Param2, int32& Return1, int32& Return2);\n\n\t/*\n\tcacacaca\n\t*/\n\tvoid ResolveAssetInstantiation();\n\n\t//cacacacaca\n\tUFUNCTION(BlueprintCallable)\n\tvoid Init();\n\n\tvirtual void OnRegister() override;\n\n\tvirtual void UninitializeComponent() override;\n\t\n\tvirtual void EndPlay(const EEndPlayReason::Type EndPlayReason) override;\n\t\n#pragma endregion\n\t\n#pragma region Trigger\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tvirtual void Trigger(bool isFirst = true);\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger, CallInEditor)\n\tvoid EnterTrigger();\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger, CallInEditor)\n\tvoid ExitTrigger();\n\t\n\tUFUNCTION(BlueprintCallable, BlueprintPure, Category = Trigger)\n\tbool IsTriggering() const { return bIsTriggering; }\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tvirtual bool CanTrigger() const;\n\n\tvirtual bool TriggerModeAllowNextTrigger() const;\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tbool HasEnoughAmmoToTrigger() const;\n\t\n\tvoid SetCooldown();\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tvoid SetCustomCooldown(float Cooldown);\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE bool IsCoolingDown() const { return GetWorld()->GetTimerManager().IsTimerActive(TriggerCooldown); }\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tvoid TryJammWeapon();\n\t\n#pragma endregion\n\n#pragma region Build\n\n\tUFUNCTION(BlueprintCallable)\n\tvoid UpdateMesh();\n\t\n\t/**\n\t * Builds the weapon asset.\n\t * @param Asset The weapon asset to build.\n\t */\n\tvoid BuildAsset(class UWeaponAssetDefault* Asset);\n\t\n\tUFUNCTION(BlueprintCallable)\n\tvoid Clean();\n\nprotected:\n\tvoid AttachCreatedComponents(const TArray<UPrimitiveComponent*>& PrimitiveComponents);\n\t\n#pragma endregion\n\n#pragma region Ammo\npublic:\n\t\n\tUFUNCTION(BlueprintCallable, CustomThunk, meta=(CustomStructureParam=\"Source\"))\n\t// ReSharper disable once CppFunctionIsNotImplemented\n\tvoid SetAmmoSource(UPARAM(Ref) int32& Source, bool ReturnRemainingAmmo = true);\n\n\tDECLARE_FUNCTION(execSetAmmoSource);\n\t\n\t/**\n\t * Sets the value of a map as the source of the ammo. This node exists since there's no find by ref in Map containers unlike in arrays that offer get by ref.\n\t * IMPORTANT. Even tho the Key of the map can be of any type, the value must be a value reinterpretable as int64 (eg, int32, enum, uint8, int16, etc) with any other type expect undefined behaviour and crashes\n\t * @param Map The map from where the ammo will be collected\n\t * @param InKey Key value that must be found in the map in order to use its value as source ammo\n\t */\n\tUFUNCTION(BlueprintCallable, CustomThunk, meta=(MapParam=\"Map\", MapKeyParam=\"InKey\"))\n\t// ReSharper disable once CppFunctionIsNotImplemented\n\tvoid SetAmmoSourceFromMap(const TMap<int32, int32>& Map, const int32& InKey, bool ReturnRemainingAmmo = true);\n\n\tDECLARE_FUNCTION(execSetAmmoSourceFromMap);\n\n#pragma endregion\n\n\tUFUNCTION()\n\tvoid SolveMagazineResize(int32 From, int32 To);\n\n\tUFUNCTION()\n\tvoid OnUseAmmoUpdated(bool previous, bool current);\n\n\tUFUNCTION()\n\tvoid OnUseMagazineUpdated(bool previous, bool current);\n\t\n\tFORCEINLINE void ClearCache() const {CachedSockets.Empty(); CachedTags.Empty();}\n    \n\t/*\n\t\tFinds the used socket\n\t\t@param Socket The socket to find\n\t*/\n\tUFUNCTION(BlueprintCallable, BlueprintPure)\n\tUSceneComponent* FindSocket(const FName& Socket) const;\n\n\tUFUNCTION(BlueprintCallable, BlueprintPure)\n\tUSceneComponent* GetTaggedComponent(const FName& Tag) const;\n\n\tUFUNCTION(BlueprintCallable, BlueprintPure)\n\tbool HasTaggedComponent(const FName& Tag) const {return !!GetTaggedComponent(Tag);}\n\n\tUSceneComponent* FindCachedSocket(const FName& Socket) const;\n\tUSceneComponent* GetCachedTaggedComponent(const FName& Tag) const;\n\t\n\tUFUNCTION(BlueprintCallable, BlueprintNativeEvent, meta=(AdvancedDisplay=\"MoveValues\"))\n\tvoid InitializeWeapon(UPARAM(ref) struct FWeaponInitializationData& Data, bool bRecallDelegates = false, uint8 MoveValues = 1);\n\n\tUFUNCTION(BlueprintCallable, BlueprintNativeEvent, meta=(AdvancedDisplay=\"MoveValues\"))\n\tFWeaponInitializationData GenerateInitializationData();\n\t\n#pragma endregion\n\n#pragma region Debug\n#if WITH_EDITORONLY_DATA\npublic:\n\t\n\tUPROPERTY(EditAnywhere)\n\tTMap<uint8, uint8> Modifications;\n\n\tbool HasAnyRecursion() const;\n\tbool HasAnyRecursion(TArray<const UWeaponAsset*>& PreviousRecursions) const;\n\n\tvoid BindOnModified();\n\t\n#endif\n#pragma endregion\n\n#pragma region Accessors\npublic:\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tbool UsesInstancedAsset() const {return bUseInstancedAsset;}\n\tvoid SetUseInstancedAsset(bool NewUseInstanced) {bUseInstancedAsset = NewUseInstanced;}\n\n\t/**\n\t * Updates a modificator in a specific slot. Must be overrided in order to work add features.\n\t * @param \tSlot\t\t\tThe slot where the modification is applied.\n\t * @param \tModification\tThe modification to apply.\n\t * @param\tbForceUpdate\tForces to update all generation even if no changes were made\n\t*/\n\tUFUNCTION(BlueprintCallable)\n\tvoid ChangeModificationAtSlot(uint8 Slot, uint8 Modification, bool bForceUpdate = true);\n\t\n\t/**\n\t* Updates all modificators to match the input.\n\t* @param \tnewModifications\tMap containing the new mods and slots.\n\t* @param\tbForceUpdate\t\tForces to update all generation even if no changes were made\n\t*/\n\tUFUNCTION(BlueprintCallable)\n\tvoid SetWeaponModifications(const TMap<uint8, uint8>& newModifications, bool bForceUpdate = true);\n\n\tUFUNCTION(BlueprintCallable, BlueprintPure)\n\tFORCEINLINE bool ExistSlot(int32 slot) const {return GetWeaponModificationsConst().Contains(slot);}\n\t\n\t/**\n\t* Gets a enum of modifiers in the selected slot.\n\t* @param \tSlot\tIndex of the slot.\n\t* @returns\tNull if out of bounds, else the modifier in slot.\n\t*/\n\tUFUNCTION(BlueprintCallable, BlueprintPure)\n\tFORCEINLINE uint8 GetModificationAtSlot(uint8 Slot) const {return GetWeaponModificationsConst().Contains(Slot) ? WeaponAsset->ModificationApplied[Slot] : -1;};\n\t\n\t/** Gets the modificators */\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tTMap<uint8, uint8>& GetWeaponModificationsConst() const {return WeaponAsset->ModificationApplied;}\n\n\t/** Gets the modificators */\n\tUFUNCTION(BlueprintCallable, BlueprintPure)\n\tconst TMap<uint8, uint8>& GetWeaponModifications() const {return WeaponAsset->ModificationApplied;}\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE void SetWeaponAsset(class UWeaponAsset* Asset);\n\t\n\tUFUNCTION(BlueprintCallable, BlueprintPure)\n\tFORCEINLINE bool IsGenerating() const {return isGenerating;}\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE class UWeaponAssetDefault* GetWeaponAsset() const {return WeaponAsset;}\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE float GetTriggerRate() const {return ManualModificator.TriggerRate.Operator.CalculateOtherAsBase(WeaponAsset->GetTriggerRate()); }\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE float GetTriggerRateRaw() const {return WeaponAsset->GetTriggerRate(); }\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE float GetTriggerRateSec() const {return 1.0 / ManualModificator.TriggerRate.Operator.CalculateOtherAsBase(WeaponAsset->GetTriggerRate()); }\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE float GetTriggerRateSecRaw() const {return 1.0 / WeaponAsset->GetTriggerRateMs(); }\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE uint8 GetBurstTriggers() const {return ManualModificator.BurstTriggers.Operator.CalculateOtherAsBase(WeaponAsset->GetBurstTriggers());}\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE uint8 GetBurstTriggersRaw() const {return WeaponAsset->GetBurstTriggers();}\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE int32 GetMagazineCapability() const {return ManualModificator.MagazineCapability.Operator.CalculateOtherAsBase(WeaponAsset->GetMagazineCapability());}\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE int32 GetMagazineCapabilityRaw() const {return WeaponAsset->GetMagazineCapability();}\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE float GetJammProbability() const {return ManualModificator.JammProbability.Operator.CalculateOtherAsBase(WeaponAsset->GetJamProbability());}\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE float GetJammProbabilityRaw() const {return WeaponAsset->GetJamProbability();}\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE bool GetUseAmmo() const {return WeaponAsset->GetUsesAmmo();}\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE bool GetUseMagazine() const {return WeaponAsset->GetUsesMagazine();}\n\t\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE int32 GetAmmoInMagazine(int32 Fallback=0) const {return GetUseMagazine() ? AmmoInMagazine : Fallback;}\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE int32 GetAmmoInMagazineOrSource() const {return GetAmmoInMagazine();}\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE int64 GetSourceAmmo64() const {return AmmoSource;}\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE int32 GetSourceAmmo32() const {return AmmoSource;}\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE uint8 GetSourceAmmo8() const {return AmmoSource;}\n\n\t\n\t\n\ttemplate<typename T>\n\tFORCEINLINE T GetSourceAmmo() const {return AmmoSource;}\n\n\ttemplate<typename T>\n\tFORCEINLINE T GetMagazineAmmo() const {return AmmoInMagazine;}\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE uint8 GetIterationReloadStepAmmount() const {return ManualModificator.IterationReloadStepAmmount.Operator.CalculateOtherAsBase(GetIterationReloadStepAmmountRaw());}\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE uint8 GetIterationReloadStepAmmountRaw() const {return WeaponAsset->GetIterationReloadStepAmount();}\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE int32 GetAmmoLoosePerTrigger() const {return ManualModificator.AmmoLoosePerTrigger.Operator.CalculateOtherAsBase(GetAmmoLoosePerTriggerRaw());}\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE int32 GetAmmoLoosePerTriggerRaw() const {return WeaponAsset->GetAmmoLoosePerTrigger();}\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE bool GetTriggerIfAmmoLessThanRequired() const {return WeaponAsset->GetTriggerIfAmmoLessThanRequired();}\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE bool GetCustomTriggerExecutionTiming() const {return WeaponAsset->GetCustomTriggerExecutionTiming();}\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE bool GetCustomReloadExecutionTiming() const {return WeaponAsset->GetCustomReloadExecutionTiming() || !GetReloadByMagazine();}\n\t\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE bool GetLooseExtraAmmoOnReload() const {return WeaponAsset->GetLooseExtraAmmoOnReload();}\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE bool GetCustomUnjammExecutionTiming() const {return WeaponAsset->GetCustomUnjamExecutionTiming();}\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE bool GetReloadByMagazine() const {return WeaponAsset->GetReloadByMagazine();}\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE int32 GetAmmoInUse() const {return GetUseAmmo() ? GetAmmoInMagazineOrSource() : 0; }\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE bool HasAmmo() const {return !GetUseAmmo() || GetAmmoInUse() > 0; }\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE TEnumAsByte<EAmmoType> GetAmmoType() const {return WeaponAsset->GetAmmoType(); }\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE bool IsJammed() const {return !!bJammed;}\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE bool IsReloading() const {return bReloading;}\n\t\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE uint8 GetCurrentBurstIndex() const {return BurstIndex;}\n\n#pragma endregion\n\n\tUFUNCTION(BlueprintCallable, CallInEditor, Category = Trigger)\n\tvoid Reload();\n\t\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tFORCEINLINE void CancelReload() {bCancelReload = !GetReloadByMagazine();}\n\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tvoid ReloadLogic();\n\t\n\tUFUNCTION(BlueprintCallable, Category = Trigger)\n\tvoid ReloadLogicManual(int32 AddAmmo);\n\n\tvirtual void BeginPlay() override;\n\n\tUFUNCTION()\n\tFORCEINLINE void EndReload() {bReloading = bCancelReload = false;}\n\n};", "functions": [{"name": "ParamsAndReturn", "return_type": "int32", "parameters": ["int32 Param1", " int32 Param2", " int32& Return1", " int32& Return2"], "comment": {"description": "/*\nParamsAndReturn some generic description\n", "parameters": [{"name": " Param1", "description": "some generic description for the first parameter"}, {"name": " Param2", "description": "some generic description for the second parameter"}, {"name": " Return1", "description": "some generic description for the first return value"}, {"name": " Return2", "description": "some generic description for the second return value"}], "return_type": "@return some generic description for the return value"}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Caca"}], "metadata": ["DisplayName=\"ParamsAndReturn\""]}}, {"name": "ResolveAssetInstantiation", "return_type": "void", "parameters": [""], "comment": {"description": "/*\ncacacaca\n*/\n\n", "parameters": [], "return_type": ""}, "ufunction": ""}, {"name": "Init", "return_type": "void", "parameters": [""], "comment": {"description": "//cacacacaca\n\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}], "metadata": []}}, {"name": "OnRegister", "return_type": "virtual void", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": ""}, {"name": "UninitializeComponent", "return_type": "virtual void", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": ""}, {"name": "EndPlay", "return_type": "virtual void", "parameters": ["const EEndPlayReason::Type EndPlayReason"], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": ""}, {"name": "Trigger", "return_type": "virtual void", "parameters": ["bool isFirst = true"], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "EnterTrigger", "return_type": "void", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}, {"name": "CallInEditor", "value": ""}], "metadata": []}}, {"name": "ExitTrigger", "return_type": "void", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}, {"name": "CallInEditor", "value": ""}], "metadata": []}}, {"name": "IsTriggering", "return_type": "bool", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "BlueprintPure", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "CanTrigger", "return_type": "virtual bool", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "TriggerModeAllowNextTrigger", "return_type": "virtual bool", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": ""}, {"name": "HasEnoughAmmoToTrigger", "return_type": "bool", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "SetCooldown", "return_type": "void", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": ""}, {"name": "SetCustomCooldown", "return_type": "void", "parameters": ["float Cooldown"], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "IsCoolingDown", "return_type": "FORCEINLINE bool", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "TryJammWeapon", "return_type": "void", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "UpdateMesh", "return_type": "void", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}], "metadata": []}}, {"name": "BuildAsset", "return_type": "void", "parameters": ["class UWeaponAssetDefault* Asset"], "comment": {"description": "/**\n* Builds the weapon asset.\n", "parameters": [{"name": " Asset", "description": "The weapon asset to build."}], "return_type": ""}, "ufunction": ""}, {"name": "Clean", "return_type": "void", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}], "metadata": []}}, {"name": "AttachCreatedComponents", "return_type": "void", "parameters": ["const TArray<UPrimitiveComponent*>& PrimitiveComponents"], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": ""}, {"name": "SetAmmoSource", "return_type": "void", "parameters": ["UPARAM"], "comment": {"description": "// ReSharper disable once CppFunctionIsNotImplemented\n\n", "parameters": [], "return_type": ""}, "ufunction": ""}, {"name": "SetAmmoSourceFromMap", "return_type": "void", "parameters": ["const TMap<int32", " int32>& Map", " const int32& InKey", " bool ReturnRemainingAmmo = true"], "comment": {"description": "/**\n* Sets the value of a map as the source of the ammo. This node exists since there's no find by ref in Map containers unlike in arrays that offer get by ref.\n* IMPORTANT. Even tho the Key of the map can be of any type, the value must be a value reinterpretable as int64 (eg, int32, enum, uint8, int16, etc) with any other type expect undefined behaviour and crashes\n", "parameters": [{"name": " Map", "description": "The map from where the ammo will be collected"}, {"name": " InKey", "description": "Key value that must be found in the map in order to use its value as source ammo"}], "return_type": ""}, "ufunction": ""}, {"name": "SolveMagazineResize", "return_type": "void", "parameters": ["int32 From", " int32 To"], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "", "value": ""}], "metadata": []}}, {"name": "OnUseAmmoUpdated", "return_type": "void", "parameters": ["bool previous", " bool current"], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "", "value": ""}], "metadata": []}}, {"name": "OnUseMagazineUpdated", "return_type": "void", "parameters": ["bool previous", " bool current"], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "", "value": ""}], "metadata": []}}, {"name": "ClearCache", "return_type": "FORCEINLINE void", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": ""}, {"name": "FindSocket", "return_type": "USceneComponent*", "parameters": ["const FName& Socket"], "comment": {"description": "/*\nFinds the used socket\n", "parameters": [{"name": " Socket", "description": "The socket to find"}], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "BlueprintPure", "value": ""}], "metadata": []}}, {"name": "GetTaggedComponent", "return_type": "USceneComponent*", "parameters": ["const FName& Tag"], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "BlueprintPure", "value": ""}], "metadata": []}}, {"name": "HasTaggedComponent", "return_type": "bool", "parameters": ["const FName& Tag"], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "BlueprintPure", "value": ""}], "metadata": []}}, {"name": "FindCachedSocket", "return_type": "USceneComponent*", "parameters": ["const FName& Socket"], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": ""}, {"name": "GetCachedTaggedComponent", "return_type": "USceneComponent*", "parameters": ["const FName& Tag"], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": ""}, {"name": "InitializeWeapon", "return_type": "void", "parameters": ["UPARAM"], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "BlueprintNativeEvent", "value": ""}], "metadata": ["AdvancedDisplay=\"MoveValues\""]}}, {"name": "GenerateInitializationData", "return_type": "FWeaponInitializationData", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "BlueprintNativeEvent", "value": ""}], "metadata": ["AdvancedDisplay=\"MoveValues\""]}}, {"name": "HasAnyRecursion", "return_type": "bool", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": ""}, {"name": "HasAnyRecursion", "return_type": "bool", "parameters": ["TArray<const UWeaponAsset*>& PreviousRecursions"], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": ""}, {"name": "BindOnModified", "return_type": "void", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": ""}, {"name": "UsesInstancedAsset", "return_type": "bool", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "SetUseInstancedAsset", "return_type": "void", "parameters": ["bool NewUseInstanced"], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": ""}, {"name": "ChangeModificationAtSlot", "return_type": "void", "parameters": ["uint8 Slot", " uint8 Modification", " bool bForceUpdate = true"], "comment": {"description": "/**\n* Updates a modificator in a specific slot. Must be overrided in order to work add features.\n", "parameters": [{"name": " \tSlot", "description": "The slot where the modification is applied."}, {"name": " \tModification", "description": "The modification to apply."}, {"name": "\tbForceUpdate", "description": "Forces to update all generation even if no changes were made"}], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}], "metadata": []}}, {"name": "SetWeaponModifications", "return_type": "void", "parameters": ["const TMap<uint8", " uint8>& newModifications", " bool bForceUpdate = true"], "comment": {"description": "/**\n* Updates all modificators to match the input.\n", "parameters": [{"name": " \tnewModifications", "description": "Map containing the new mods and slots."}, {"name": "\tbForceUpdate", "description": "Forces to update all generation even if no changes were made"}], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}], "metadata": []}}, {"name": "ExistSlot", "return_type": "FORCEINLINE bool", "parameters": ["int32 slot"], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "BlueprintPure", "value": ""}], "metadata": []}}, {"name": "GetModificationAtSlot", "return_type": "FORCEINLINE uint8", "parameters": ["uint8 Slot"], "comment": {"description": "/**\n* Gets a enum of modifiers in the selected slot.\n", "parameters": [{"name": " \tSlot", "description": "Index of the slot."}], "return_type": "@returns\tNull if out of bounds, else the modifier in slot."}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "BlueprintPure", "value": ""}], "metadata": []}}, {"name": "SetWeaponAsset", "return_type": "FORCEINLINE void", "parameters": ["class UWeaponAsset* Asset"], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "IsGenerating", "return_type": "FORCEINLINE bool", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "BlueprintPure", "value": ""}], "metadata": []}}, {"name": "GetWeaponAsset", "return_type": "FORCEINLINE class UWeaponAssetDefault*", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetTriggerRate", "return_type": "FORCEINLINE float", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetTriggerRateRaw", "return_type": "FORCEINLINE float", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetTriggerRateSec", "return_type": "FORCEINLINE float", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetTriggerRateSecRaw", "return_type": "FORCEINLINE float", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetBurstTriggers", "return_type": "FORCEINLINE uint8", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetBurstTriggersRaw", "return_type": "FORCEINLINE uint8", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetMagazineCapability", "return_type": "FORCEINLINE int32", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetMagazineCapabilityRaw", "return_type": "FORCEINLINE int32", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetJammProbability", "return_type": "FORCEINLINE float", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetJammProbabilityRaw", "return_type": "FORCEINLINE float", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetUseAmmo", "return_type": "FORCEINLINE bool", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetUseMagazine", "return_type": "FORCEINLINE bool", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetAmmoInMagazine", "return_type": "FORCEINLINE int32", "parameters": ["int32 Fallback=0"], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetAmmoInMagazineOrSource", "return_type": "FORCEINLINE int32", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetSourceAmmo64", "return_type": "FORCEINLINE int64", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetSourceAmmo32", "return_type": "FORCEINLINE int32", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetSourceAmmo8", "return_type": "FORCEINLINE uint8", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetSourceAmmo", "return_type": "FORCEINLINE T", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": ""}, {"name": "GetMagazineAmmo", "return_type": "FORCEINLINE T", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": ""}, {"name": "GetIterationReloadStepAmmount", "return_type": "FORCEINLINE uint8", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetIterationReloadStepAmmountRaw", "return_type": "FORCEINLINE uint8", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetAmmoLoosePerTrigger", "return_type": "FORCEINLINE int32", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetAmmoLoosePerTriggerRaw", "return_type": "FORCEINLINE int32", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetTriggerIfAmmoLessThanRequired", "return_type": "FORCEINLINE bool", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetCustomTriggerExecutionTiming", "return_type": "FORCEINLINE bool", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetCustomReloadExecutionTiming", "return_type": "FORCEINLINE bool", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetLooseExtraAmmoOnReload", "return_type": "FORCEINLINE bool", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetCustomUnjammExecutionTiming", "return_type": "FORCEINLINE bool", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetReloadByMagazine", "return_type": "FORCEINLINE bool", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetAmmoInUse", "return_type": "FORCEINLINE int32", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "HasAmmo", "return_type": "FORCEINLINE bool", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetAmmoType", "return_type": "FORCEINLINE TEnumAsByte<EAmmoType>", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "IsJammed", "return_type": "FORCEINLINE bool", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "IsReloading", "return_type": "FORCEINLINE bool", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "GetCurrentBurstIndex", "return_type": "FORCEINLINE uint8", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "Reload", "return_type": "void", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "CallInEditor", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "CancelReload", "return_type": "FORCEINLINE void", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "ReloadLogic", "return_type": "void", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "ReloadLogicManual", "return_type": "void", "parameters": ["int32 AddAmmo"], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "BeginPlay", "return_type": "virtual void", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": ""}, {"name": "EndReload", "return_type": "FORCEINLINE void", "parameters": [""], "comment": {"description": "\n", "parameters": [], "return_type": ""}, "ufunction": {"name": "UFUNCTION", "parameters": [{"name": "", "value": ""}], "metadata": []}}], "variables": [{"name": "ManualModificator;", "type": "FWeaponAttributesModificator", "comment": "", "uproperty": {"name": "UPROPERTY", "parameters": [{"name": "EditAnywhere", "value": ""}, {"name": "BlueprintReadWrite", "value": ""}], "metadata": []}}, {"name": "OnTriggered;", "type": "FTriggered", "comment": "//Used to cache components with the specific socket", "uproperty": {"name": "UPROPERTY", "parameters": [{"name": "BlueprintAssignable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "OnTriggerFailed;", "type": "FTriggered", "comment": "", "uproperty": {"name": "UPROPERTY", "parameters": [{"name": "BlueprintAssignable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "OnCooledDown;", "type": "FCooledDown", "comment": "", "uproperty": {"name": "UPROPERTY", "parameters": [{"name": "BlueprintAssignable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "OnBeginReload;", "type": "FTriggered", "comment": "", "uproperty": {"name": "UPROPERTY", "parameters": [{"name": "BlueprintAssignable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "OnReload;", "type": "FTriggered", "comment": "", "uproperty": {"name": "UPROPERTY", "parameters": [{"name": "BlueprintAssignable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "OnFinishReload;", "type": "FTriggered", "comment": "", "uproperty": {"name": "UPROPERTY", "parameters": [{"name": "BlueprintAssignable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "OnReloadFailed;", "type": "FTriggered", "comment": "", "uproperty": {"name": "UPROPERTY", "parameters": [{"name": "BlueprintAssignable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "OnJamm;", "type": "FTriggered", "comment": "", "uproperty": {"name": "UPROPERTY", "parameters": [{"name": "BlueprintAssignable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "AmmoSource;", "type": "TDynamicPtr", "comment": "", "uproperty": ""}, {"name": "AmmoInMagazine;", "type": "TDynamicPtr", "comment": "", "uproperty": ""}, {"name": "WeaponAsset;", "type": "class UWeaponAssetDefault*", "comment": "", "uproperty": {"name": "UPROPERTY", "parameters": [{"name": "VisibleAnywhere", "value": ""}, {"name": "BlueprintReadOnly", "value": ""}, {"name": "Transient", "value": ""}], "metadata": []}}, {"name": "WeaponAssetSource;", "type": "TObjectPtr<const class UWeaponAssetDefault>", "comment": "//FAst access to source weapon asset. EDITOR ONLY", "uproperty": {"name": "UPROPERTY", "parameters": [{"name": "EditAnywhere", "value": ""}], "metadata": []}}, {"name": "TriggerCooldown;", "type": "FTimerHandle", "comment": "", "uproperty": ""}, {"name": "TriggerTimer;", "type": "FTimerHandle", "comment": "", "uproperty": ""}, {"name": "BurstIndex;", "type": "int32", "comment": "", "uproperty": ""}, {"name": "Modifications;", "type": "TMap<uint8, uint8>", "comment": "", "uproperty": {"name": "UPROPERTY", "parameters": [{"name": "EditAnywhere", "value": ""}], "metadata": []}}, {"name": "WeaponAsset->ModificationApplied;}", "type": "TMap<uint8, uint8>& GetWeaponModificationsConst() const {return", "comment": "", "uproperty": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "Category", "value": "Trigger"}], "metadata": []}}, {"name": "WeaponAsset->ModificationApplied;}", "type": "const TMap<uint8, uint8>& GetWeaponModifications() const {return", "comment": "", "uproperty": {"name": "UFUNCTION", "parameters": [{"name": "BlueprintCallable", "value": ""}, {"name": "BlueprintPure", "value": ""}], "metadata": []}}], "comment": {"description": "/**\n* Component that handles the weapon logic.\n*/\n\n", "parameters": [], "return_type": ""}, "uclass": {"name": "UCLASS", "parameters": [{"name": "Blueprintable", "value": ""}, {"name": "BlueprintType", "value": ""}], "metadata": ["BlueprintSpawnableComponent"]}}]